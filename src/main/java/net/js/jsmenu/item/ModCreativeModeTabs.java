package net.js.jsmenu.item;

import net.js.jsmenu.JSMenu;
import net.js.jsmenu.block.ModBlocks;
import net.js.jsmenu.fluid.ModFluids;
import net.minecraft.core.registries.Registries;
import net.minecraft.network.chat.Component;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;
import net.neoforged.bus.api.IEventBus;
import net.neoforged.neoforge.registries.DeferredRegister;

import java.util.function.Supplier;

public class ModCreativeModeTabs {
    public static final DeferredRegister<CreativeModeTab> CREATIVE_MODE_TAB =
            DeferredRegister.create(Registries.CREATIVE_MODE_TAB, JSMenu.MOD_ID);

    public static final Supplier<CreativeModeTab> JSMENU = CREATIVE_MODE_TAB.register("jsmenu",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.ACTINIUM.get()))
                    .title(Component.translatable("creativetab.jsmenu.jsmenu"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.HYDROGEN);
                        output.accept(ModBlocks.HYDROGEN_BLOCK);
                        output.accept(ModBlocks.HYDROGEN_ORE);
                        output.accept(ModItems.HELIUM);
                        output.accept(ModBlocks.HELIUM_BLOCK);
                        output.accept(ModItems.LITHIUM);
                        output.accept(ModBlocks.LITHIUM_BLOCK);
                        output.accept(ModBlocks.LITHIUM_ORE);
                        output.accept(ModItems.BERYLLIUM);
                        output.accept(ModBlocks.BERYLLIUM_BLOCK);
                        output.accept(ModBlocks.BERYLLIUM_ORE);
                        output.accept(ModItems.BORON);
                        output.accept(ModBlocks.BORON_BLOCK);
                        output.accept(ModBlocks.BORON_ORE);
                        output.accept(ModItems.CARBON);
                        output.accept(ModBlocks.CARBON_BLOCK);
                        output.accept(ModBlocks.CARBON_ORE);
                        output.accept(ModItems.NITROGEN);
                        output.accept(ModBlocks.NITROGEN_BLOCK);
                        output.accept(ModBlocks.NITROGEN_ORE);
                        output.accept(ModItems.OXYGEN);
                        output.accept(ModBlocks.OXYGEN_BLOCK);
                        output.accept(ModBlocks.OXYGEN_ORE);
                        output.accept(ModItems.FLUORINE);
                        output.accept(ModBlocks.FLUORINE_BLOCK);
                        output.accept(ModBlocks.FLUORINE_ORE);
                        output.accept(ModItems.NEON);
                        output.accept(ModBlocks.NEON_BLOCK);
                        output.accept(ModBlocks.NEON_ORE);
                        output.accept(ModItems.ARGON);
                        output.accept(ModBlocks.ARGON_BLOCK);
                        output.accept(ModBlocks.ARGON_ORE);
                        output.accept(ModItems.SODIUM);
                        output.accept(ModBlocks.SODIUM_BLOCK);
                        output.accept(ModBlocks.SODIUM_ORE);
                        output.accept(ModItems.MAGNESIUM);
                        output.accept(ModBlocks.MAGNESIUM_BLOCK);
                        output.accept(ModBlocks.MAGNESIUM_ORE);
                        output.accept(ModItems.ALUMINUM);
                        output.accept(ModBlocks.ALUMINUM_BLOCK);
                        output.accept(ModBlocks.ALUMINUM_ORE);
                        output.accept(ModItems.SILICON);
                        output.accept(ModBlocks.SILICON_BLOCK);
                        output.accept(ModBlocks.SILICON_ORE);
                        output.accept(ModItems.PHOSPHORUS);
                        output.accept(ModBlocks.PHOSPHORUS_BLOCK);
                        output.accept(ModBlocks.PHOSPHORUS_ORE);
                        output.accept(ModItems.SULFUR);
                        output.accept(ModBlocks.SULFUR_BLOCK);
                        output.accept(ModBlocks.SULFUR_ORE);
                        output.accept(ModItems.CHLORINE);
                        output.accept(ModBlocks.CHLORINE_BLOCK);
                        output.accept(ModBlocks.CHLORINE_ORE);
                        output.accept(ModItems.POTASSIUM);
                        output.accept(ModBlocks.POTASSIUM_BLOCK);
                        output.accept(ModBlocks.POTASSIUM_ORE);
                        output.accept(ModItems.CALCIUM);
                        output.accept(ModBlocks.CALCIUM_BLOCK);
                        output.accept(ModBlocks.CALCIUM_ORE);
                        output.accept(ModItems.RAW_SCANDIUM);
                        output.accept(ModItems.SCANDIUM_INGOT);
                        output.accept(ModBlocks.RAW_SCANDIUM_BLOCK);
                        output.accept(ModBlocks.SCANDIUM_BLOCK);
                        output.accept(ModBlocks.SCANDIUM_ORE);
                        output.accept(ModItems.RAW_TITANIUM);
                        output.accept(ModItems.TITANIUM_INGOT);
                        output.accept(ModBlocks.RAW_TITANIUM_BLOCK);
                        output.accept(ModBlocks.TITANIUM_BLOCK);
                        output.accept(ModBlocks.TITANIUM_ORE);
                        output.accept(ModItems.RAW_VANADIUM);
                        output.accept(ModItems.VANADIUM_INGOT);
                        output.accept(ModBlocks.RAW_VANADIUM_BLOCK);
                        output.accept(ModBlocks.VANADIUM_BLOCK);
                        output.accept(ModBlocks.VANADIUM_ORE);
                        output.accept(ModItems.RAW_CHROMIUM);
                        output.accept(ModItems.CHROMIUM_INGOT);
                        output.accept(ModBlocks.RAW_CHROMIUM_BLOCK);
                        output.accept(ModBlocks.CHROMIUM_BLOCK);
                        output.accept(ModBlocks.CHROMIUM_ORE);
                        output.accept(ModItems.RAW_MANGANESE);
                        output.accept(ModItems.MANGANESE_INGOT);
                        output.accept(ModBlocks.RAW_MANGANESE_BLOCK);
                        output.accept(ModBlocks.MANGANESE_BLOCK);
                        output.accept(ModBlocks.MANGANESE_ORE);
                        output.accept(Items.RAW_IRON);
                        output.accept(Items.IRON_INGOT);
                        output.accept(Blocks.RAW_IRON_BLOCK);
                        output.accept(Blocks.IRON_BLOCK);
                        output.accept(Blocks.IRON_ORE);
                        output.accept(ModItems.RAW_COBALT);
                        output.accept(ModItems.COBALT_INGOT);
                        output.accept(ModBlocks.RAW_COBALT_BLOCK);
                        output.accept(ModBlocks.COBALT_BLOCK);
                        output.accept(ModBlocks.COBALT_ORE);
                        output.accept(ModItems.RAW_NICKEL);
                        output.accept(ModItems.NICKEL_INGOT);
                        output.accept(ModBlocks.RAW_NICKEL_BLOCK);
                        output.accept(ModBlocks.NICKEL_BLOCK);
                        output.accept(ModBlocks.NICKEL_ORE);
                        output.accept(Items.RAW_COPPER);
                        output.accept(Items.COPPER_INGOT);
                        output.accept(Blocks.RAW_COPPER_BLOCK);
                        output.accept(Blocks.COPPER_BLOCK);
                        output.accept(Blocks.COPPER_ORE);
                        output.accept(ModItems.RAW_ZINC);
                        output.accept(ModItems.ZINC_INGOT);
                        output.accept(ModBlocks.RAW_ZINC_BLOCK);
                        output.accept(ModBlocks.ZINC_BLOCK);
                        output.accept(ModBlocks.ZINC_ORE);
                        output.accept(ModItems.GALLIUM);
                        output.accept(ModBlocks.GALLIUM_BLOCK);
                        output.accept(ModBlocks.GALLIUM_ORE);
                        output.accept(ModItems.GERMANIUM);
                        output.accept(ModBlocks.GERMANIUM_BLOCK);
                        output.accept(ModBlocks.GERMANIUM_ORE);
                        output.accept(ModItems.ARSENIC);
                        output.accept(ModBlocks.ARSENIC_BLOCK);
                        output.accept(ModBlocks.ARSENIC_ORE);
                        output.accept(ModItems.SELENIUM);
                        output.accept(ModBlocks.SELENIUM_BLOCK);
                        output.accept(ModBlocks.SELENIUM_ORE);
                        output.accept(ModItems.BROMINE_BUCKET);
                        output.accept(ModItems.KRYPTON);
                        output.accept(ModBlocks.KRYPTON_BLOCK);
                        output.accept(ModBlocks.KRYPTON_ORE);
                        output.accept(ModItems.RUBIDIUM);
                        output.accept(ModBlocks.RUBIDIUM_BLOCK);
                        output.accept(ModBlocks.RUBIDIUM_ORE);
                        output.accept(ModItems.STRONTIUM);
                        output.accept(ModBlocks.STRONTIUM_BLOCK);
                        output.accept(ModBlocks.STRONTIUM_ORE);
                        output.accept(ModItems.RAW_YTTRIUM);
                        output.accept(ModItems.YTTRIUM_INGOT);
                        output.accept(ModBlocks.RAW_YTTRIUM_BLOCK);
                        output.accept(ModBlocks.YTTRIUM_BLOCK);
                        output.accept(ModBlocks.YTTRIUM_ORE);
                        output.accept(ModItems.RAW_ZIRCONIUM);
                        output.accept(ModItems.ZIRCONIUM_INGOT);
                        output.accept(ModBlocks.RAW_ZIRCONIUM_BLOCK);
                        output.accept(ModBlocks.ZIRCONIUM_BLOCK);
                        output.accept(ModBlocks.ZIRCONIUM_ORE);
                        output.accept(ModItems.RAW_NIOBIUM);
                        output.accept(ModItems.NIOBIUM_INGOT);
                        output.accept(ModBlocks.RAW_NIOBIUM_BLOCK);
                        output.accept(ModBlocks.NIOBIUM_BLOCK);
                        output.accept(ModBlocks.NIOBIUM_ORE);
                        output.accept(ModItems.RAW_MOLYBDENUM);
                        output.accept(ModItems.MOLYBDENUM_INGOT);
                        output.accept(ModBlocks.RAW_MOLYBDENUM_BLOCK);
                        output.accept(ModBlocks.MOLYBDENUM_BLOCK);
                        output.accept(ModBlocks.MOLYBDENUM_ORE);
                        output.accept(ModItems.TECHNETIUM);
                        output.accept(ModBlocks.TECHNETIUM_BLOCK);
                        output.accept(ModBlocks.TECHNETIUM_ORE);
                        output.accept(ModItems.RAW_RUTHENIUM);
                        output.accept(ModItems.RUTHENIUM_INGOT);
                        output.accept(ModBlocks.RAW_RUTHENIUM_BLOCK);
                        output.accept(ModBlocks.RUTHENIUM_BLOCK);
                        output.accept(ModBlocks.RUTHENIUM_ORE);
                        output.accept(ModItems.RAW_RHODIUM);
                        output.accept(ModItems.RHODIUM_INGOT);
                        output.accept(ModBlocks.RAW_RHODIUM_BLOCK);
                        output.accept(ModBlocks.RHODIUM_BLOCK);
                        output.accept(ModBlocks.RHODIUM_ORE);
                        output.accept(ModItems.RAW_PALLADIUM);
                        output.accept(ModItems.PALLADIUM_INGOT);
                        output.accept(ModBlocks.RAW_PALLADIUM_BLOCK);
                        output.accept(ModBlocks.PALLADIUM_BLOCK);
                        output.accept(ModBlocks.PALLADIUM_ORE);
                        output.accept(ModItems.RAW_SILVER);
                        output.accept(ModItems.SILVER_INGOT);
                        output.accept(ModBlocks.RAW_SILVER_BLOCK);
                        output.accept(ModBlocks.SILVER_BLOCK);
                        output.accept(ModBlocks.SILVER_ORE);
                        output.accept(ModItems.RAW_CADMIUM);
                        output.accept(ModItems.CADMIUM_INGOT);
                        output.accept(ModBlocks.RAW_CADMIUM_BLOCK);
                        output.accept(ModBlocks.CADMIUM_BLOCK);
                        output.accept(ModBlocks.CADMIUM_ORE);
                        output.accept(ModItems.INDIUM);
                        output.accept(ModBlocks.INDIUM_BLOCK);
                        output.accept(ModBlocks.INDIUM_ORE);
                        output.accept(ModItems.TIN);
                        output.accept(ModBlocks.TIN_BLOCK);
                        output.accept(ModBlocks.TIN_ORE);
                        output.accept(ModItems.ANTIMONY);
                        output.accept(ModBlocks.ANTIMONY_BLOCK);
                        output.accept(ModBlocks.ANTIMONY_ORE);
                        output.accept(ModItems.TELLURIUM);
                        output.accept(ModBlocks.TELLURIUM_BLOCK);
                        output.accept(ModBlocks.TELLURIUM_ORE);
                        output.accept(ModItems.IODINE);
                        output.accept(ModBlocks.IODINE_BLOCK);
                        output.accept(ModBlocks.IODINE_ORE);
                        output.accept(ModItems.XENON);
                        output.accept(ModBlocks.XENON_BLOCK);
                        output.accept(ModBlocks.XENON_ORE);
                        output.accept(ModItems.CAESIUM);
                        output.accept(ModBlocks.CAESIUM_BLOCK);
                        output.accept(ModBlocks.CAESIUM_ORE);
                        output.accept(ModItems.BARIUM);
                        output.accept(ModBlocks.BARIUM_BLOCK);
                        output.accept(ModBlocks.BARIUM_ORE);
                        output.accept(ModItems.LANTHANUM);
                        output.accept(ModBlocks.LANTHANUM_BLOCK);
                        output.accept(ModBlocks.LANTHANUM_ORE);
                        output.accept(ModItems.CERIUM);
                        output.accept(ModBlocks.CERIUM_BLOCK);
                        output.accept(ModBlocks.CERIUM_ORE);
                        output.accept(ModItems.PRASEODYMIUM);
                        output.accept(ModBlocks.PRASEODYMIUM_BLOCK);
                        output.accept(ModBlocks.PRASEODYMIUM_ORE);
                        output.accept(ModItems.NEODYMIUM);
                        output.accept(ModBlocks.NEODYMIUM_BLOCK);
                        output.accept(ModBlocks.NEODYMIUM_ORE);
                        output.accept(ModItems.PROMETHIUM);
                        output.accept(ModBlocks.PROMETHIUM_BLOCK);
                        output.accept(ModBlocks.PROMETHIUM_ORE);
                        output.accept(ModItems.SAMARIUM);
                        output.accept(ModBlocks.SAMARIUM_BLOCK);
                        output.accept(ModBlocks.SAMARIUM_ORE);
                        output.accept(ModItems.EUROPIUM);
                        output.accept(ModBlocks.EUROPIUM_BLOCK);
                        output.accept(ModBlocks.EUROPIUM_ORE);
                        output.accept(ModItems.GADOLINIUM);
                        output.accept(ModBlocks.GADOLINIUM_BLOCK);
                        output.accept(ModBlocks.GADOLINIUM_ORE);
                        output.accept(ModItems.TERBIUM);
                        output.accept(ModBlocks.TERBIUM_BLOCK);
                        output.accept(ModBlocks.TERBIUM_ORE);
                        output.accept(ModItems.DYSPROSIUM);
                        output.accept(ModBlocks.DYSPROSIUM_BLOCK);
                        output.accept(ModBlocks.DYSPROSIUM_ORE);
                        output.accept(ModItems.HOLMIUM);
                        output.accept(ModBlocks.HOLMIUM_BLOCK);
                        output.accept(ModBlocks.HOLMIUM_ORE);
                        output.accept(ModItems.ERBIUM);
                        output.accept(ModBlocks.ERBIUM_BLOCK);
                        output.accept(ModBlocks.ERBIUM_ORE);
                        output.accept(ModItems.THULIUM);
                        output.accept(ModBlocks.THULIUM_ORE);
                        output.accept(ModBlocks.THULIUM_BLOCK);
                        output.accept(ModItems.YTTERBIUM);
                        output.accept(ModBlocks.YTTERBIUM_BLOCK);
                        output.accept(ModBlocks.YTTERBIUM_ORE);
                        output.accept(ModItems.LUTETIUM);
                        output.accept(ModBlocks.LUTETIUM_BLOCK);
                        output.accept(ModBlocks.LUTETIUM_ORE);
                        output.accept(ModItems.RAW_HAFNIUM);
                        output.accept(ModItems.HAFNIUM_INGOT);
                        output.accept(ModBlocks.RAW_HAFNIUM_BLOCK);
                        output.accept(ModBlocks.HAFNIUM_BLOCK);
                        output.accept(ModBlocks.HAFNIUM_ORE);
                        output.accept(ModItems.RAW_TANTALUM);
                        output.accept(ModItems.TANTALUM_INGOT);
                        output.accept(ModBlocks.RAW_TANTALUM_BLOCK);
                        output.accept(ModBlocks.TANTALUM_BLOCK);
                        output.accept(ModBlocks.TANTALUM_ORE);
                        output.accept(ModItems.RAW_TUNGSTEN);
                        output.accept(ModItems.TUNGSTEN_INGOT);
                        output.accept(ModBlocks.RAW_TUNGSTEN_BLOCK);
                        output.accept(ModBlocks.TUNGSTEN_BLOCK);
                        output.accept(ModBlocks.TUNGSTEN_ORE);
                        output.accept(ModItems.RAW_RHENIUM);
                        output.accept(ModItems.RHENIUM_INGOT);
                        output.accept(ModBlocks.RAW_RHENIUM_BLOCK);
                        output.accept(ModBlocks.RHENIUM_BLOCK);
                        output.accept(ModBlocks.RHENIUM_ORE);
                        output.accept(ModItems.RAW_OSMIUM);
                        output.accept(ModItems.OSMIUM_INGOT);
                        output.accept(ModBlocks.RAW_OSMIUM_BLOCK);
                        output.accept(ModBlocks.OSMIUM_BLOCK);
                        output.accept(ModBlocks.OSMIUM_ORE);
                        output.accept(ModItems.RAW_IRIDIUM);
                        output.accept(ModItems.IRIDIUM_INGOT);
                        output.accept(ModBlocks.RAW_IRIDIUM_BLOCK);
                        output.accept(ModBlocks.IRIDIUM_BLOCK);
                        output.accept(ModBlocks.IRIDIUM_ORE);
                        output.accept(ModItems.PLATINUM);
                        output.accept(ModBlocks.PLATINUM_BLOCK);
                        output.accept(ModBlocks.PLATINUM_ORE);
                        output.accept(Items.RAW_GOLD);
                        output.accept(Items.GOLD_INGOT);
                        output.accept(Blocks.RAW_GOLD_BLOCK);
                        output.accept(Blocks.GOLD_BLOCK);
                        output.accept(Blocks.GOLD_ORE);
                        output.accept(ModItems.MERCURY_BUCKET);
                        output.accept(ModItems.THALLIUM);
                        output.accept(ModBlocks.THALLIUM_BLOCK);
                        output.accept(ModBlocks.THALLIUM_ORE);
                        output.accept(ModItems.LEAD);
                        output.accept(ModBlocks.LEAD_BLOCK);
                        output.accept(ModBlocks.LEAD_ORE);
                        output.accept(ModItems.BISMUTH);
                        output.accept(ModBlocks.BISMUTH_BLOCK);
                        output.accept(ModBlocks.BISMUTH_ORE);
                        output.accept(ModItems.POLONIUM);
                        output.accept(ModBlocks.POLONIUM_BLOCK);
                        output.accept(ModBlocks.POLONIUM_ORE);
                        output.accept(ModItems.ASTATINE);
                        output.accept(ModBlocks.ASTATINE_BLOCK);
                        output.accept(ModBlocks.ASTATINE_ORE);
                        output.accept(ModItems.RADON);
                        output.accept(ModBlocks.RADON_BLOCK);
                        output.accept(ModBlocks.RADON_ORE);
                        output.accept(ModItems.FRANCIUM);
                        output.accept(ModBlocks.FRANCIUM_BLOCK);
                        output.accept(ModBlocks.FRANCIUM_ORE);
                        output.accept(ModItems.RADIUM);
                        output.accept(ModBlocks.RADIUM_BLOCK);
                        output.accept(ModBlocks.RADIUM_ORE);
                        output.accept(ModItems.ACTINIUM);
                        output.accept(ModBlocks.ACTINIUM_BLOCK);
                        output.accept(ModBlocks.ACTINIUM_ORE);
                        output.accept(ModItems.THORIUM);
                        output.accept(ModBlocks.THORIUM_BLOCK);
                        output.accept(ModBlocks.THORIUM_ORE);
                        output.accept(ModItems.PROTACTINIUM);
                        output.accept(ModBlocks.PROTACTINIUM_BLOCK);
                        output.accept(ModBlocks.PROTACTINIUM_ORE);
                        output.accept(ModItems.URANIUM);
                        output.accept(ModBlocks.URANIUM_BLOCK);
                        output.accept(ModBlocks.URANIUM_ORE);
                        output.accept(ModItems.NEPTUNIUM);
                        output.accept(ModBlocks.NEPTUNIUM_BLOCK);
                        output.accept(ModBlocks.NEPTUNIUM_ORE);
                        output.accept(ModItems.PLUTONIUM);
                        output.accept(ModBlocks.PLUTONIUM_BLOCK);
                        output.accept(ModBlocks.PLUTONIUM_ORE);
                        output.accept(ModItems.AMERICIUM);
                        output.accept(ModBlocks.AMERICIUM_BLOCK);
                        output.accept(ModBlocks.AMERICIUM_ORE);
                        output.accept(ModItems.CURIUM);
                        output.accept(ModBlocks.CURIUM_BLOCK);
                        output.accept(ModBlocks.CURIUM_ORE);
                        output.accept(ModItems.BERKELIUM);
                        output.accept(ModBlocks.BERKELIUM_BLOCK);
                        output.accept(ModBlocks.BERKELIUM_ORE);
                        output.accept(ModItems.CALIFORNIUM);
                        output.accept(ModBlocks.CALIFORNIUM_BLOCK);
                        output.accept(ModBlocks.CALIFORNIUM_ORE);
                        output.accept(ModItems.EINSTEINIUM);
                        output.accept(ModBlocks.EINSTEINIUM_BLOCK);
                        output.accept(ModBlocks.EINSTEINIUM_ORE);
                        output.accept(ModItems.FERMIUM);
                        output.accept(ModBlocks.FERMIUM_BLOCK);
                        output.accept(ModBlocks.FERMIUM_ORE);
                        output.accept(ModItems.MENDELEVIUM);
                        output.accept(ModBlocks.MENDELEVIUM_ORE);
                        output.accept(ModBlocks.MENDELEVIUM_BLOCK);
                        output.accept(ModItems.NOBELIUM);
                        output.accept(ModBlocks.NOBELIUM_BLOCK);
                        output.accept(ModBlocks.NOBELIUM_ORE);
                        output.accept(ModItems.LAWRENCIUM);
                        output.accept(ModBlocks.LAWRENCIUM_BLOCK);
                        output.accept(ModBlocks.LAWRENCIUM_ORE);
                        output.accept(ModItems.RUTHERFORDIUM);
                        output.accept(ModBlocks.RUTHERFORDIUM_BLOCK);
                        output.accept(ModBlocks.RUTHERFORDIUM_ORE);
                        output.accept(ModItems.DUBNIUM);
                        output.accept(ModBlocks.DUBNIUM_BLOCK);
                        output.accept(ModBlocks.DUBNIUM_ORE);
                        output.accept(ModItems.SEABORGIUM);
                        output.accept(ModBlocks.SEABORGIUM_BLOCK);
                        output.accept(ModBlocks.SEABORGIUM_ORE);
                        output.accept(ModItems.BOHRIUM);
                        output.accept(ModBlocks.BOHRIUM_BLOCK);
                        output.accept(ModBlocks.BOHRIUM_ORE);
                        output.accept(ModItems.HASSIUM);
                        output.accept(ModBlocks.HASSIUM_BLOCK);
                        output.accept(ModBlocks.HASSIUM_ORE);
                        output.accept(ModItems.MEITNERIUM);
                        output.accept(ModBlocks.MEITNERIUM_BLOCK);
                        output.accept(ModBlocks.MEITNERIUM_ORE);
                        output.accept(ModItems.DARMSTADTIUM);
                        output.accept(ModBlocks.DARMSTADTIUM_BLOCK);
                        output.accept(ModBlocks.DARMSTADTIUM_ORE);
                        output.accept(ModItems.ROENTGENIUM);
                        output.accept(ModBlocks.ROENTGENIUM_BLOCK);
                        output.accept(ModBlocks.ROENTGENIUM_ORE);
                        output.accept(ModItems.COPERNICIUM);
                        output.accept(ModBlocks.COPERNICIUM_BLOCK);
                        output.accept(ModBlocks.COPERNICIUM_ORE);
                        output.accept(ModItems.NIHONIUM);
                        output.accept(ModBlocks.NIHONIUM_BLOCK);
                        output.accept(ModBlocks.NIHONIUM_ORE);
                        output.accept(ModItems.FLEROVIUM);
                        output.accept(ModBlocks.FLEROVIUM_BLOCK);
                        output.accept(ModBlocks.FLEROVIUM_ORE);
                        output.accept(ModItems.MOSCOVIUM);
                        output.accept(ModBlocks.MOSCOVIUM_BLOCK);
                        output.accept(ModBlocks.MOSCOVIUM_ORE);
                        output.accept(ModItems.LIVERMORIUM);
                        output.accept(ModBlocks.LIVERMORIUM_BLOCK);
                        output.accept(ModBlocks.LIVERMORIUM_ORE);
                        output.accept(ModItems.TENNESSINE);
                        output.accept(ModBlocks.TENNESSINE_BLOCK);
                        output.accept(ModBlocks.TENNESSINE_ORE);
                        output.accept(ModItems.OGANESSON);
                        output.accept(ModBlocks.OGANESSON_BLOCK);
                        output.accept(ModBlocks.OGANESSON_ORE);
                        output.accept(ModItems.HELIUM_SWORD);
                        output.accept(ModBlocks.CARBON_COMPRESSOR);
                        output.accept(ModItems.ORE_TURNER);
                        output.accept(ModItems.DEEPSLATE_ORE_TURNER);
                        output.accept(ModItems.NETHER_ORE_TURNER);
                        output.accept(ModItems.ALKALI_ORE_TURNER);
                        output.accept(ModItems.ALKALINE_ORE_TURNER);
                        output.accept(ModItems.GRANITE_ORE_TURNER);
                        output.accept(ModItems.DIORITE_ORE_TURNER);
                        output.accept(ModItems.ANDESITE_ORE_TURNER);
                        output.accept(ModItems.TUFF_ORE_TURNER);
                        output.accept(ModItems.LANTHANOID_ORE_TURNER);
                        output.accept(ModItems.ACTINIDE_ORE_TURNER);
                        output.accept(ModItems.POST_TRANSITION_ORE_TURNER);
                        output.accept(ModItems.METALLOID_ORE_TURNER);
                        output.accept(ModItems.OTHER_NONMETALS_ORE_TURNER);
                        output.accept(ModItems.HALOGENS_ORE_TURNER);
                        output.accept(ModItems.NOBLE_GASSES_ORE_TURNER);
                        output.accept(ModBlocks.FUNNY_JS_BLOCK);
                        output.accept(ModItems.FUNNY_JS_ITEM);
                    }).build());

    public static final Supplier<CreativeModeTab> PERIODIC_MOD = CREATIVE_MODE_TAB.register("periodicmod",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.HYDROGEN.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "jsmenu"))
                    .title(Component.translatable("creativetab.jsmenu.periodicmod"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.HYDROGEN);
                        output.accept(ModBlocks.HYDROGEN_BLOCK);
                        output.accept(ModBlocks.HYDROGEN_ORE);
                        output.accept(ModItems.HELIUM);
                        output.accept(ModBlocks.HELIUM_BLOCK);
                        output.accept(ModItems.LITHIUM);
                        output.accept(ModBlocks.LITHIUM_BLOCK);
                        output.accept(ModBlocks.LITHIUM_ORE);
                        output.accept(ModItems.BERYLLIUM);
                        output.accept(ModBlocks.BERYLLIUM_BLOCK);
                        output.accept(ModBlocks.BERYLLIUM_ORE);
                        output.accept(ModItems.BORON);
                        output.accept(ModBlocks.BORON_BLOCK);
                        output.accept(ModBlocks.BORON_ORE);
                        output.accept(ModItems.CARBON);
                        output.accept(ModBlocks.CARBON_BLOCK);
                        output.accept(ModBlocks.CARBON_ORE);
                        output.accept(ModItems.NITROGEN);
                        output.accept(ModBlocks.NITROGEN_BLOCK);
                        output.accept(ModBlocks.NITROGEN_ORE);
                        output.accept(ModItems.OXYGEN);
                        output.accept(ModBlocks.OXYGEN_BLOCK);
                        output.accept(ModBlocks.OXYGEN_ORE);
                        output.accept(ModItems.FLUORINE);
                        output.accept(ModBlocks.FLUORINE_BLOCK);
                        output.accept(ModBlocks.FLUORINE_ORE);
                        output.accept(ModItems.NEON);
                        output.accept(ModBlocks.NEON_BLOCK);
                        output.accept(ModBlocks.NEON_ORE);
                        output.accept(ModItems.ARGON);
                        output.accept(ModBlocks.ARGON_BLOCK);
                        output.accept(ModBlocks.ARGON_ORE);
                        output.accept(ModItems.SODIUM);
                        output.accept(ModBlocks.SODIUM_BLOCK);
                        output.accept(ModBlocks.SODIUM_ORE);
                        output.accept(ModItems.MAGNESIUM);
                        output.accept(ModBlocks.MAGNESIUM_BLOCK);
                        output.accept(ModBlocks.MAGNESIUM_ORE);
                        output.accept(ModItems.ALUMINUM);
                        output.accept(ModBlocks.ALUMINUM_BLOCK);
                        output.accept(ModBlocks.ALUMINUM_ORE);
                        output.accept(ModItems.SILICON);
                        output.accept(ModBlocks.SILICON_BLOCK);
                        output.accept(ModBlocks.SILICON_ORE);
                        output.accept(ModItems.PHOSPHORUS);
                        output.accept(ModBlocks.PHOSPHORUS_BLOCK);
                        output.accept(ModBlocks.PHOSPHORUS_ORE);
                        output.accept(ModItems.SULFUR);
                        output.accept(ModBlocks.SULFUR_BLOCK);
                        output.accept(ModBlocks.SULFUR_ORE);
                        output.accept(ModItems.CHLORINE);
                        output.accept(ModBlocks.CHLORINE_BLOCK);
                        output.accept(ModBlocks.CHLORINE_ORE);
                        output.accept(ModItems.POTASSIUM);
                        output.accept(ModBlocks.POTASSIUM_BLOCK);
                        output.accept(ModBlocks.POTASSIUM_ORE);
                        output.accept(ModItems.CALCIUM);
                        output.accept(ModBlocks.CALCIUM_BLOCK);
                        output.accept(ModBlocks.CALCIUM_ORE);
                        output.accept(ModItems.RAW_SCANDIUM);
                        output.accept(ModItems.SCANDIUM_INGOT);
                        output.accept(ModBlocks.RAW_SCANDIUM_BLOCK);
                        output.accept(ModBlocks.SCANDIUM_BLOCK);
                        output.accept(ModBlocks.SCANDIUM_ORE);
                        output.accept(ModItems.RAW_TITANIUM);
                        output.accept(ModItems.TITANIUM_INGOT);
                        output.accept(ModBlocks.RAW_TITANIUM_BLOCK);
                        output.accept(ModBlocks.TITANIUM_BLOCK);
                        output.accept(ModBlocks.TITANIUM_ORE);
                        output.accept(ModItems.RAW_VANADIUM);
                        output.accept(ModItems.VANADIUM_INGOT);
                        output.accept(ModBlocks.RAW_VANADIUM_BLOCK);
                        output.accept(ModBlocks.VANADIUM_BLOCK);
                        output.accept(ModBlocks.VANADIUM_ORE);
                        output.accept(ModItems.RAW_CHROMIUM);
                        output.accept(ModItems.CHROMIUM_INGOT);
                        output.accept(ModBlocks.RAW_CHROMIUM_BLOCK);
                        output.accept(ModBlocks.CHROMIUM_BLOCK);
                        output.accept(ModBlocks.CHROMIUM_ORE);
                        output.accept(ModItems.RAW_MANGANESE);
                        output.accept(ModItems.MANGANESE_INGOT);
                        output.accept(ModBlocks.RAW_MANGANESE_BLOCK);
                        output.accept(ModBlocks.MANGANESE_BLOCK);
                        output.accept(ModBlocks.MANGANESE_ORE);
                        output.accept(Items.RAW_IRON);
                        output.accept(Items.IRON_INGOT);
                        output.accept(Blocks.RAW_IRON_BLOCK);
                        output.accept(Blocks.IRON_BLOCK);
                        output.accept(Blocks.IRON_ORE);
                        output.accept(ModItems.RAW_COBALT);
                        output.accept(ModItems.COBALT_INGOT);
                        output.accept(ModBlocks.RAW_COBALT_BLOCK);
                        output.accept(ModBlocks.COBALT_BLOCK);
                        output.accept(ModBlocks.COBALT_ORE);
                        output.accept(ModItems.RAW_NICKEL);
                        output.accept(ModItems.NICKEL_INGOT);
                        output.accept(ModBlocks.RAW_NICKEL_BLOCK);
                        output.accept(ModBlocks.NICKEL_BLOCK);
                        output.accept(ModBlocks.NICKEL_ORE);
                        output.accept(Items.RAW_COPPER);
                        output.accept(Items.COPPER_INGOT);
                        output.accept(Blocks.RAW_COPPER_BLOCK);
                        output.accept(Blocks.COPPER_BLOCK);
                        output.accept(Blocks.COPPER_ORE);
                        output.accept(ModItems.RAW_ZINC);
                        output.accept(ModItems.ZINC_INGOT);
                        output.accept(ModBlocks.RAW_ZINC_BLOCK);
                        output.accept(ModBlocks.ZINC_BLOCK);
                        output.accept(ModBlocks.ZINC_ORE);
                        output.accept(ModItems.GALLIUM);
                        output.accept(ModBlocks.GALLIUM_BLOCK);
                        output.accept(ModBlocks.GALLIUM_ORE);
                        output.accept(ModItems.GERMANIUM);
                        output.accept(ModBlocks.GERMANIUM_BLOCK);
                        output.accept(ModBlocks.GERMANIUM_ORE);
                        output.accept(ModItems.ARSENIC);
                        output.accept(ModBlocks.ARSENIC_BLOCK);
                        output.accept(ModBlocks.ARSENIC_ORE);
                        output.accept(ModItems.SELENIUM);
                        output.accept(ModBlocks.SELENIUM_BLOCK);
                        output.accept(ModBlocks.SELENIUM_ORE);
                        output.accept(ModItems.KRYPTON);
                        output.accept(ModBlocks.KRYPTON_BLOCK);
                        output.accept(ModBlocks.KRYPTON_ORE);
                        output.accept(ModItems.RUBIDIUM);
                        output.accept(ModBlocks.RUBIDIUM_BLOCK);
                        output.accept(ModBlocks.RUBIDIUM_ORE);
                        output.accept(ModItems.STRONTIUM);
                        output.accept(ModBlocks.STRONTIUM_BLOCK);
                        output.accept(ModBlocks.STRONTIUM_ORE);
                        output.accept(ModItems.RAW_YTTRIUM);
                        output.accept(ModItems.YTTRIUM_INGOT);
                        output.accept(ModBlocks.RAW_YTTRIUM_BLOCK);
                        output.accept(ModBlocks.YTTRIUM_BLOCK);
                        output.accept(ModBlocks.YTTRIUM_ORE);
                        output.accept(ModItems.RAW_ZIRCONIUM);
                        output.accept(ModItems.ZIRCONIUM_INGOT);
                        output.accept(ModBlocks.RAW_ZIRCONIUM_BLOCK);
                        output.accept(ModBlocks.ZIRCONIUM_BLOCK);
                        output.accept(ModBlocks.ZIRCONIUM_ORE);
                        output.accept(ModItems.RAW_NIOBIUM);
                        output.accept(ModItems.NIOBIUM_INGOT);
                        output.accept(ModBlocks.RAW_NIOBIUM_BLOCK);
                        output.accept(ModBlocks.NIOBIUM_BLOCK);
                        output.accept(ModBlocks.NIOBIUM_ORE);
                        output.accept(ModItems.RAW_MOLYBDENUM);
                        output.accept(ModItems.MOLYBDENUM_INGOT);
                        output.accept(ModBlocks.RAW_MOLYBDENUM_BLOCK);
                        output.accept(ModBlocks.MOLYBDENUM_BLOCK);
                        output.accept(ModBlocks.MOLYBDENUM_ORE);
                        output.accept(ModItems.TECHNETIUM);
                        output.accept(ModBlocks.TECHNETIUM_BLOCK);
                        output.accept(ModBlocks.TECHNETIUM_ORE);
                        output.accept(ModItems.RAW_RUTHENIUM);
                        output.accept(ModItems.RUTHENIUM_INGOT);
                        output.accept(ModBlocks.RAW_RUTHENIUM_BLOCK);
                        output.accept(ModBlocks.RUTHENIUM_BLOCK);
                        output.accept(ModBlocks.RUTHENIUM_ORE);
                        output.accept(ModItems.RAW_RHODIUM);
                        output.accept(ModItems.RHODIUM_INGOT);
                        output.accept(ModBlocks.RAW_RHODIUM_BLOCK);
                        output.accept(ModBlocks.RHODIUM_BLOCK);
                        output.accept(ModBlocks.RHODIUM_ORE);
                        output.accept(ModItems.RAW_PALLADIUM);
                        output.accept(ModItems.PALLADIUM_INGOT);
                        output.accept(ModBlocks.RAW_PALLADIUM_BLOCK);
                        output.accept(ModBlocks.PALLADIUM_BLOCK);
                        output.accept(ModBlocks.PALLADIUM_ORE);
                        output.accept(ModItems.RAW_SILVER);
                        output.accept(ModItems.SILVER_INGOT);
                        output.accept(ModBlocks.RAW_SILVER_BLOCK);
                        output.accept(ModBlocks.SILVER_BLOCK);
                        output.accept(ModBlocks.SILVER_ORE);
                        output.accept(ModItems.RAW_CADMIUM);
                        output.accept(ModItems.CADMIUM_INGOT);
                        output.accept(ModBlocks.RAW_CADMIUM_BLOCK);
                        output.accept(ModBlocks.CADMIUM_BLOCK);
                        output.accept(ModBlocks.CADMIUM_ORE);
                        output.accept(ModItems.INDIUM);
                        output.accept(ModBlocks.INDIUM_BLOCK);
                        output.accept(ModBlocks.INDIUM_ORE);
                        output.accept(ModItems.TIN);
                        output.accept(ModBlocks.TIN_BLOCK);
                        output.accept(ModBlocks.TIN_ORE);
                        output.accept(ModItems.ANTIMONY);
                        output.accept(ModBlocks.ANTIMONY_BLOCK);
                        output.accept(ModBlocks.ANTIMONY_ORE);
                        output.accept(ModItems.TELLURIUM);
                        output.accept(ModBlocks.TELLURIUM_BLOCK);
                        output.accept(ModBlocks.TELLURIUM_ORE);
                        output.accept(ModItems.IODINE);
                        output.accept(ModBlocks.IODINE_BLOCK);
                        output.accept(ModBlocks.IODINE_ORE);
                        output.accept(ModItems.XENON);
                        output.accept(ModBlocks.XENON_BLOCK);
                        output.accept(ModBlocks.XENON_ORE);
                        output.accept(ModItems.CAESIUM);
                        output.accept(ModBlocks.CAESIUM_BLOCK);
                        output.accept(ModBlocks.CAESIUM_ORE);
                        output.accept(ModItems.BARIUM);
                        output.accept(ModBlocks.BARIUM_BLOCK);
                        output.accept(ModBlocks.BARIUM_ORE);
                        output.accept(ModItems.LANTHANUM);
                        output.accept(ModBlocks.LANTHANUM_BLOCK);
                        output.accept(ModBlocks.LANTHANUM_ORE);
                        output.accept(ModItems.CERIUM);
                        output.accept(ModBlocks.CERIUM_BLOCK);
                        output.accept(ModBlocks.CERIUM_ORE);
                        output.accept(ModItems.PRASEODYMIUM);
                        output.accept(ModBlocks.PRASEODYMIUM_BLOCK);
                        output.accept(ModBlocks.PRASEODYMIUM_ORE);
                        output.accept(ModItems.NEODYMIUM);
                        output.accept(ModBlocks.NEODYMIUM_BLOCK);
                        output.accept(ModBlocks.NEODYMIUM_ORE);
                        output.accept(ModItems.PROMETHIUM);
                        output.accept(ModBlocks.PROMETHIUM_BLOCK);
                        output.accept(ModBlocks.PROMETHIUM_ORE);
                        output.accept(ModItems.SAMARIUM);
                        output.accept(ModBlocks.SAMARIUM_BLOCK);
                        output.accept(ModBlocks.SAMARIUM_ORE);
                        output.accept(ModItems.EUROPIUM);
                        output.accept(ModBlocks.EUROPIUM_BLOCK);
                        output.accept(ModBlocks.EUROPIUM_ORE);
                        output.accept(ModItems.GADOLINIUM);
                        output.accept(ModBlocks.GADOLINIUM_BLOCK);
                        output.accept(ModBlocks.GADOLINIUM_ORE);
                        output.accept(ModItems.TERBIUM);
                        output.accept(ModBlocks.TERBIUM_BLOCK);
                        output.accept(ModBlocks.TERBIUM_ORE);
                        output.accept(ModItems.DYSPROSIUM);
                        output.accept(ModBlocks.DYSPROSIUM_BLOCK);
                        output.accept(ModBlocks.DYSPROSIUM_ORE);
                        output.accept(ModItems.HOLMIUM);
                        output.accept(ModBlocks.HOLMIUM_BLOCK);
                        output.accept(ModBlocks.HOLMIUM_ORE);
                        output.accept(ModItems.ERBIUM);
                        output.accept(ModBlocks.ERBIUM_BLOCK);
                        output.accept(ModBlocks.ERBIUM_ORE);
                        output.accept(ModItems.THULIUM);
                        output.accept(ModBlocks.THULIUM_ORE);
                        output.accept(ModBlocks.THULIUM_BLOCK);
                        output.accept(ModItems.YTTERBIUM);
                        output.accept(ModBlocks.YTTERBIUM_BLOCK);
                        output.accept(ModBlocks.YTTERBIUM_ORE);
                        output.accept(ModItems.LUTETIUM);
                        output.accept(ModBlocks.LUTETIUM_BLOCK);
                        output.accept(ModBlocks.LUTETIUM_ORE);
                        output.accept(ModItems.RAW_HAFNIUM);
                        output.accept(ModItems.HAFNIUM_INGOT);
                        output.accept(ModBlocks.RAW_HAFNIUM_BLOCK);
                        output.accept(ModBlocks.HAFNIUM_BLOCK);
                        output.accept(ModBlocks.HAFNIUM_ORE);
                        output.accept(ModItems.RAW_TANTALUM);
                        output.accept(ModItems.TANTALUM_INGOT);
                        output.accept(ModBlocks.RAW_TANTALUM_BLOCK);
                        output.accept(ModBlocks.TANTALUM_BLOCK);
                        output.accept(ModBlocks.TANTALUM_ORE);
                        output.accept(ModItems.RAW_TUNGSTEN);
                        output.accept(ModItems.TUNGSTEN_INGOT);
                        output.accept(ModBlocks.RAW_TUNGSTEN_BLOCK);
                        output.accept(ModBlocks.TUNGSTEN_BLOCK);
                        output.accept(ModBlocks.TUNGSTEN_ORE);
                        output.accept(ModItems.RAW_RHENIUM);
                        output.accept(ModItems.RHENIUM_INGOT);
                        output.accept(ModBlocks.RAW_RHENIUM_BLOCK);
                        output.accept(ModBlocks.RHENIUM_BLOCK);
                        output.accept(ModBlocks.RHENIUM_ORE);
                        output.accept(ModItems.RAW_OSMIUM);
                        output.accept(ModItems.OSMIUM_INGOT);
                        output.accept(ModBlocks.RAW_OSMIUM_BLOCK);
                        output.accept(ModBlocks.OSMIUM_BLOCK);
                        output.accept(ModBlocks.OSMIUM_ORE);
                        output.accept(ModItems.RAW_IRIDIUM);
                        output.accept(ModItems.IRIDIUM_INGOT);
                        output.accept(ModBlocks.RAW_IRIDIUM_BLOCK);
                        output.accept(ModBlocks.IRIDIUM_BLOCK);
                        output.accept(ModBlocks.IRIDIUM_ORE);
                        output.accept(ModItems.PLATINUM);
                        output.accept(ModBlocks.PLATINUM_BLOCK);
                        output.accept(ModBlocks.PLATINUM_ORE);
                        output.accept(Items.RAW_GOLD);
                        output.accept(Items.GOLD_INGOT);
                        output.accept(Blocks.RAW_GOLD_BLOCK);
                        output.accept(Blocks.GOLD_BLOCK);
                        output.accept(Blocks.GOLD_ORE);
                        output.accept(ModItems.THALLIUM);
                        output.accept(ModBlocks.THALLIUM_BLOCK);
                        output.accept(ModBlocks.THALLIUM_ORE);
                        output.accept(ModItems.LEAD);
                        output.accept(ModBlocks.LEAD_BLOCK);
                        output.accept(ModBlocks.LEAD_ORE);
                        output.accept(ModItems.BISMUTH);
                        output.accept(ModBlocks.BISMUTH_BLOCK);
                        output.accept(ModBlocks.BISMUTH_ORE);
                        output.accept(ModItems.POLONIUM);
                        output.accept(ModBlocks.POLONIUM_BLOCK);
                        output.accept(ModBlocks.POLONIUM_ORE);
                        output.accept(ModItems.ASTATINE);
                        output.accept(ModBlocks.ASTATINE_BLOCK);
                        output.accept(ModBlocks.ASTATINE_ORE);
                        output.accept(ModItems.RADON);
                        output.accept(ModBlocks.RADON_BLOCK);
                        output.accept(ModBlocks.RADON_ORE);
                        output.accept(ModItems.FRANCIUM);
                        output.accept(ModBlocks.FRANCIUM_BLOCK);
                        output.accept(ModBlocks.FRANCIUM_ORE);
                        output.accept(ModItems.RADIUM);
                        output.accept(ModBlocks.RADIUM_BLOCK);
                        output.accept(ModBlocks.RADIUM_ORE);
                        output.accept(ModItems.ACTINIUM);
                        output.accept(ModBlocks.ACTINIUM_BLOCK);
                        output.accept(ModBlocks.ACTINIUM_ORE);
                        output.accept(ModItems.THORIUM);
                        output.accept(ModBlocks.THORIUM_BLOCK);
                        output.accept(ModBlocks.THORIUM_ORE);
                        output.accept(ModItems.PROTACTINIUM);
                        output.accept(ModBlocks.PROTACTINIUM_BLOCK);
                        output.accept(ModBlocks.PROTACTINIUM_ORE);
                        output.accept(ModItems.URANIUM);
                        output.accept(ModBlocks.URANIUM_BLOCK);
                        output.accept(ModBlocks.URANIUM_ORE);
                        output.accept(ModItems.NEPTUNIUM);
                        output.accept(ModBlocks.NEPTUNIUM_BLOCK);
                        output.accept(ModBlocks.NEPTUNIUM_ORE);
                        output.accept(ModItems.PLUTONIUM);
                        output.accept(ModBlocks.PLUTONIUM_BLOCK);
                        output.accept(ModBlocks.PLUTONIUM_ORE);
                        output.accept(ModItems.AMERICIUM);
                        output.accept(ModBlocks.AMERICIUM_BLOCK);
                        output.accept(ModBlocks.AMERICIUM_ORE);
                        output.accept(ModItems.CURIUM);
                        output.accept(ModBlocks.CURIUM_BLOCK);
                        output.accept(ModBlocks.CURIUM_ORE);
                        output.accept(ModItems.BERKELIUM);
                        output.accept(ModBlocks.BERKELIUM_BLOCK);
                        output.accept(ModBlocks.BERKELIUM_ORE);
                        output.accept(ModItems.CALIFORNIUM);
                        output.accept(ModBlocks.CALIFORNIUM_BLOCK);
                        output.accept(ModBlocks.CALIFORNIUM_ORE);
                        output.accept(ModItems.EINSTEINIUM);
                        output.accept(ModBlocks.EINSTEINIUM_BLOCK);
                        output.accept(ModBlocks.EINSTEINIUM_ORE);
                        output.accept(ModItems.FERMIUM);
                        output.accept(ModBlocks.FERMIUM_BLOCK);
                        output.accept(ModBlocks.FERMIUM_ORE);
                        output.accept(ModItems.MENDELEVIUM);
                        output.accept(ModBlocks.MENDELEVIUM_ORE);
                        output.accept(ModBlocks.MENDELEVIUM_BLOCK);
                        output.accept(ModItems.NOBELIUM);
                        output.accept(ModBlocks.NOBELIUM_BLOCK);
                        output.accept(ModBlocks.NOBELIUM_ORE);
                        output.accept(ModItems.LAWRENCIUM);
                        output.accept(ModBlocks.LAWRENCIUM_BLOCK);
                        output.accept(ModBlocks.LAWRENCIUM_ORE);
                        output.accept(ModItems.RUTHERFORDIUM);
                        output.accept(ModBlocks.RUTHERFORDIUM_BLOCK);
                        output.accept(ModBlocks.RUTHERFORDIUM_ORE);
                        output.accept(ModItems.DUBNIUM);
                        output.accept(ModBlocks.DUBNIUM_BLOCK);
                        output.accept(ModBlocks.DUBNIUM_ORE);
                        output.accept(ModItems.SEABORGIUM);
                        output.accept(ModBlocks.SEABORGIUM_BLOCK);
                        output.accept(ModBlocks.SEABORGIUM_ORE);
                        output.accept(ModItems.BOHRIUM);
                        output.accept(ModBlocks.BOHRIUM_BLOCK);
                        output.accept(ModBlocks.BOHRIUM_ORE);
                        output.accept(ModItems.HASSIUM);
                        output.accept(ModBlocks.HASSIUM_BLOCK);
                        output.accept(ModBlocks.HASSIUM_ORE);
                        output.accept(ModItems.MEITNERIUM);
                        output.accept(ModBlocks.MEITNERIUM_BLOCK);
                        output.accept(ModBlocks.MEITNERIUM_ORE);
                        output.accept(ModItems.DARMSTADTIUM);
                        output.accept(ModBlocks.DARMSTADTIUM_BLOCK);
                        output.accept(ModBlocks.DARMSTADTIUM_ORE);
                        output.accept(ModItems.ROENTGENIUM);
                        output.accept(ModBlocks.ROENTGENIUM_BLOCK);
                        output.accept(ModBlocks.ROENTGENIUM_ORE);
                        output.accept(ModItems.COPERNICIUM);
                        output.accept(ModBlocks.COPERNICIUM_BLOCK);
                        output.accept(ModBlocks.COPERNICIUM_ORE);
                        output.accept(ModItems.NIHONIUM);
                        output.accept(ModBlocks.NIHONIUM_BLOCK);
                        output.accept(ModBlocks.NIHONIUM_ORE);
                        output.accept(ModItems.FLEROVIUM);
                        output.accept(ModBlocks.FLEROVIUM_BLOCK);
                        output.accept(ModBlocks.FLEROVIUM_ORE);
                        output.accept(ModItems.MOSCOVIUM);
                        output.accept(ModBlocks.MOSCOVIUM_BLOCK);
                        output.accept(ModBlocks.MOSCOVIUM_ORE);
                        output.accept(ModItems.LIVERMORIUM);
                        output.accept(ModBlocks.LIVERMORIUM_BLOCK);
                        output.accept(ModBlocks.LIVERMORIUM_ORE);
                        output.accept(ModItems.TENNESSINE);
                        output.accept(ModBlocks.TENNESSINE_BLOCK);
                        output.accept(ModBlocks.TENNESSINE_ORE);
                        output.accept(ModItems.OGANESSON);
                        output.accept(ModBlocks.OGANESSON_BLOCK);
                        output.accept(ModBlocks.OGANESSON_ORE);

                    }).build());

    public static final Supplier<CreativeModeTab> ALKALI_METALS = CREATIVE_MODE_TAB.register("alkali_metals",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.LITHIUM.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "periodicmod"))
                    .title(Component.translatable("creativetab.jsmenu.alkali_metals"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.LITHIUM);
                        output.accept(ModBlocks.LITHIUM_BLOCK);
                        output.accept(ModBlocks.LITHIUM_ORE);
                        output.accept(ModItems.SODIUM);
                        output.accept(ModBlocks.SODIUM_BLOCK);
                        output.accept(ModBlocks.SODIUM_ORE);
                        output.accept(ModItems.POTASSIUM);
                        output.accept(ModBlocks.POTASSIUM_BLOCK);
                        output.accept(ModBlocks.POTASSIUM_ORE);
                        output.accept(ModItems.RUBIDIUM);
                        output.accept(ModBlocks.RUBIDIUM_BLOCK);
                        output.accept(ModBlocks.RUBIDIUM_ORE);
                        output.accept(ModItems.CAESIUM);
                        output.accept(ModBlocks.CAESIUM_BLOCK);
                        output.accept(ModBlocks.CAESIUM_ORE);
                        output.accept(ModItems.FRANCIUM);
                        output.accept(ModBlocks.FRANCIUM_BLOCK);
                        output.accept(ModBlocks.FRANCIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> ALKALINE_EARTH = CREATIVE_MODE_TAB.register("alkaline_earth",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.BERYLLIUM.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "alkali_metals"))
                    .title(Component.translatable("creativetab.jsmenu.alkaline_earth"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.BERYLLIUM);
                        output.accept(ModBlocks.BERYLLIUM_BLOCK);
                        output.accept(ModBlocks.BERYLLIUM_BLOCK);
                        output.accept(ModItems.MAGNESIUM);
                        output.accept(ModBlocks.MAGNESIUM_BLOCK);
                        output.accept(ModBlocks.MAGNESIUM_BLOCK);
                        output.accept(ModItems.CALCIUM);
                        output.accept(ModBlocks.CALCIUM_BLOCK);
                        output.accept(ModBlocks.CALCIUM_BLOCK);
                        output.accept(ModItems.STRONTIUM);
                        output.accept(ModBlocks.STRONTIUM_BLOCK);
                        output.accept(ModBlocks.STRONTIUM_BLOCK);
                        output.accept(ModItems.BARIUM);
                        output.accept(ModBlocks.BARIUM_BLOCK);
                        output.accept(ModBlocks.BARIUM_BLOCK);
                        output.accept(ModItems.RADIUM);
                        output.accept(ModBlocks.RADIUM_BLOCK);
                        output.accept(ModBlocks.RADIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> TRANSITION_METALS = CREATIVE_MODE_TAB.register("transition_metals",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModBlocks.SCANDIUM_BLOCK.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "alkaline_earth"))
                    .title(Component.translatable("creativetab.jsmenu.transition_metals"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.RAW_SCANDIUM);
                        output.accept(ModItems.SCANDIUM_INGOT);
                        output.accept(ModBlocks.RAW_SCANDIUM_BLOCK);
                        output.accept(ModBlocks.SCANDIUM_BLOCK);
                        output.accept(ModBlocks.SCANDIUM_ORE);
                        output.accept(ModItems.RAW_TITANIUM);
                        output.accept(ModItems.TITANIUM_INGOT);
                        output.accept(ModBlocks.RAW_TITANIUM_BLOCK);
                        output.accept(ModBlocks.TITANIUM_BLOCK);
                        output.accept(ModBlocks.TITANIUM_ORE);
                        output.accept(ModItems.RAW_VANADIUM);
                        output.accept(ModItems.VANADIUM_INGOT);
                        output.accept(ModBlocks.RAW_VANADIUM_BLOCK);
                        output.accept(ModBlocks.VANADIUM_BLOCK);
                        output.accept(ModBlocks.VANADIUM_ORE);
                        output.accept(ModItems.RAW_CHROMIUM);
                        output.accept(ModItems.CHROMIUM_INGOT);
                        output.accept(ModBlocks.RAW_CHROMIUM_BLOCK);
                        output.accept(ModBlocks.CHROMIUM_BLOCK);
                        output.accept(ModBlocks.CHROMIUM_ORE);
                        output.accept(ModItems.RAW_MANGANESE);
                        output.accept(ModItems.MANGANESE_INGOT);
                        output.accept(ModBlocks.RAW_MANGANESE_BLOCK);
                        output.accept(ModBlocks.MANGANESE_BLOCK);
                        output.accept(ModBlocks.MANGANESE_ORE);
                        output.accept(Items.RAW_IRON);
                        output.accept(Items.IRON_INGOT);
                        output.accept(Blocks.RAW_IRON_BLOCK);
                        output.accept(Blocks.IRON_BLOCK);
                        output.accept(Blocks.IRON_ORE);
                        output.accept(ModItems.RAW_COBALT);
                        output.accept(ModItems.COBALT_INGOT);
                        output.accept(ModBlocks.RAW_COBALT_BLOCK);
                        output.accept(ModBlocks.COBALT_BLOCK);
                        output.accept(ModBlocks.COBALT_ORE);
                        output.accept(ModItems.RAW_NICKEL);
                        output.accept(ModItems.NICKEL_INGOT);
                        output.accept(ModBlocks.RAW_NICKEL_BLOCK);
                        output.accept(ModBlocks.NICKEL_BLOCK);
                        output.accept(ModBlocks.NICKEL_ORE);
                        output.accept(Items.RAW_COPPER);
                        output.accept(Items.COPPER_INGOT);
                        output.accept(Blocks.RAW_COPPER_BLOCK);
                        output.accept(Blocks.COPPER_BLOCK);
                        output.accept(Blocks.COPPER_ORE);
                        output.accept(ModItems.RAW_ZINC);
                        output.accept(ModItems.ZINC_INGOT);
                        output.accept(ModBlocks.RAW_ZINC_BLOCK);
                        output.accept(ModBlocks.ZINC_BLOCK);
                        output.accept(ModBlocks.ZINC_ORE);
                        output.accept(ModItems.RAW_YTTRIUM);
                        output.accept(ModItems.YTTRIUM_INGOT);
                        output.accept(ModBlocks.RAW_YTTRIUM_BLOCK);
                        output.accept(ModBlocks.YTTRIUM_BLOCK);
                        output.accept(ModBlocks.YTTRIUM_ORE);
                        output.accept(ModItems.RAW_ZIRCONIUM);
                        output.accept(ModItems.ZIRCONIUM_INGOT);
                        output.accept(ModBlocks.RAW_ZIRCONIUM_BLOCK);
                        output.accept(ModBlocks.ZIRCONIUM_BLOCK);
                        output.accept(ModBlocks.ZIRCONIUM_ORE);
                        output.accept(ModItems.RAW_NIOBIUM);
                        output.accept(ModItems.NIOBIUM_INGOT);
                        output.accept(ModBlocks.RAW_NIOBIUM_BLOCK);
                        output.accept(ModBlocks.NIOBIUM_BLOCK);
                        output.accept(ModBlocks.NIOBIUM_ORE);
                        output.accept(ModItems.RAW_MOLYBDENUM);
                        output.accept(ModItems.MOLYBDENUM_INGOT);
                        output.accept(ModBlocks.RAW_MOLYBDENUM_BLOCK);
                        output.accept(ModBlocks.MOLYBDENUM_BLOCK);
                        output.accept(ModBlocks.MOLYBDENUM_ORE);
                        output.accept(ModItems.TECHNETIUM);
                        output.accept(ModBlocks.TECHNETIUM_BLOCK);
                        output.accept(ModBlocks.TECHNETIUM_ORE);
                        output.accept(ModItems.RAW_RUTHENIUM);
                        output.accept(ModItems.RUTHENIUM_INGOT);
                        output.accept(ModBlocks.RAW_RUTHENIUM_BLOCK);
                        output.accept(ModBlocks.RUTHENIUM_BLOCK);
                        output.accept(ModBlocks.RUTHENIUM_ORE);
                        output.accept(ModItems.RAW_RHODIUM);
                        output.accept(ModItems.RHODIUM_INGOT);
                        output.accept(ModBlocks.RAW_RHODIUM_BLOCK);
                        output.accept(ModBlocks.RHODIUM_BLOCK);
                        output.accept(ModBlocks.RHODIUM_ORE);
                        output.accept(ModItems.RAW_PALLADIUM);
                        output.accept(ModItems.PALLADIUM_INGOT);
                        output.accept(ModBlocks.RAW_PALLADIUM_BLOCK);
                        output.accept(ModBlocks.PALLADIUM_BLOCK);
                        output.accept(ModBlocks.PALLADIUM_ORE);
                        output.accept(ModItems.RAW_SILVER);
                        output.accept(ModItems.SILVER_INGOT);
                        output.accept(ModBlocks.RAW_SILVER_BLOCK);
                        output.accept(ModBlocks.SILVER_BLOCK);
                        output.accept(ModBlocks.SILVER_ORE);
                        output.accept(ModItems.RAW_CADMIUM);
                        output.accept(ModItems.CADMIUM_INGOT);
                        output.accept(ModBlocks.RAW_CADMIUM_BLOCK);
                        output.accept(ModBlocks.CADMIUM_BLOCK);
                        output.accept(ModBlocks.CADMIUM_ORE);
                        output.accept(ModItems.RAW_HAFNIUM);
                        output.accept(ModItems.HAFNIUM_INGOT);
                        output.accept(ModBlocks.RAW_HAFNIUM_BLOCK);
                        output.accept(ModBlocks.HAFNIUM_BLOCK);
                        output.accept(ModBlocks.HAFNIUM_ORE);
                        output.accept(ModItems.RAW_TANTALUM);
                        output.accept(ModItems.TANTALUM_INGOT);
                        output.accept(ModBlocks.RAW_TANTALUM_BLOCK);
                        output.accept(ModBlocks.TANTALUM_BLOCK);
                        output.accept(ModBlocks.TANTALUM_ORE);
                        output.accept(ModItems.RAW_TUNGSTEN);
                        output.accept(ModItems.TUNGSTEN_INGOT);
                        output.accept(ModBlocks.RAW_TUNGSTEN_BLOCK);
                        output.accept(ModBlocks.TUNGSTEN_BLOCK);
                        output.accept(ModBlocks.TUNGSTEN_ORE);
                        output.accept(ModItems.RAW_RHENIUM);
                        output.accept(ModItems.RHENIUM_INGOT);
                        output.accept(ModBlocks.RAW_RHENIUM_BLOCK);
                        output.accept(ModBlocks.RHENIUM_BLOCK);
                        output.accept(ModBlocks.RHENIUM_ORE);
                        output.accept(ModItems.RAW_OSMIUM);
                        output.accept(ModItems.OSMIUM_INGOT);
                        output.accept(ModBlocks.RAW_OSMIUM_BLOCK);
                        output.accept(ModBlocks.OSMIUM_BLOCK);
                        output.accept(ModBlocks.OSMIUM_ORE);
                        output.accept(ModItems.RAW_IRIDIUM);
                        output.accept(ModItems.IRIDIUM_INGOT);
                        output.accept(ModBlocks.RAW_IRIDIUM_BLOCK);
                        output.accept(ModBlocks.IRIDIUM_BLOCK);
                        output.accept(ModBlocks.IRIDIUM_ORE);
                        output.accept(ModItems.PLATINUM);
                        output.accept(ModBlocks.PLATINUM_BLOCK);
                        output.accept(ModBlocks.PLATINUM_ORE);
                        output.accept(Items.RAW_GOLD);
                        output.accept(Items.GOLD_INGOT);
                        output.accept(Blocks.RAW_GOLD_BLOCK);
                        output.accept(Blocks.GOLD_BLOCK);
                        output.accept(Blocks.GOLD_ORE);
                        output.accept(ModItems.RUTHERFORDIUM);
                        output.accept(ModBlocks.RUTHERFORDIUM_BLOCK);
                        output.accept(ModBlocks.RUTHERFORDIUM_ORE);
                        output.accept(ModItems.DUBNIUM);
                        output.accept(ModBlocks.DUBNIUM_BLOCK);
                        output.accept(ModBlocks.DUBNIUM_ORE);
                        output.accept(ModItems.SEABORGIUM);
                        output.accept(ModBlocks.SEABORGIUM_BLOCK);
                        output.accept(ModBlocks.SEABORGIUM_ORE);
                        output.accept(ModItems.BOHRIUM);
                        output.accept(ModBlocks.BOHRIUM_BLOCK);
                        output.accept(ModBlocks.BOHRIUM_ORE);
                        output.accept(ModItems.HASSIUM);
                        output.accept(ModBlocks.HASSIUM_BLOCK);
                        output.accept(ModBlocks.HASSIUM_ORE);
                        output.accept(ModItems.MEITNERIUM);
                        output.accept(ModBlocks.MEITNERIUM_BLOCK);
                        output.accept(ModBlocks.MEITNERIUM_ORE);
                        output.accept(ModItems.DARMSTADTIUM);
                        output.accept(ModBlocks.DARMSTADTIUM_BLOCK);
                        output.accept(ModBlocks.DARMSTADTIUM_ORE);
                        output.accept(ModItems.ROENTGENIUM);
                        output.accept(ModBlocks.ROENTGENIUM_BLOCK);
                        output.accept(ModBlocks.ROENTGENIUM_ORE);
                        output.accept(ModItems.COPERNICIUM);
                        output.accept(ModBlocks.COPERNICIUM_BLOCK);
                        output.accept(ModBlocks.COPERNICIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> LANTHANOIDS = CREATIVE_MODE_TAB.register("lanthanoids",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.LANTHANUM.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "transition_metals"))
                    .title(Component.translatable("creativetab.jsmenu.lanthanoids"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.LANTHANUM);
                        output.accept(ModBlocks.LANTHANUM_BLOCK);
                        output.accept(ModBlocks.LANTHANUM_ORE);
                        output.accept(ModItems.CERIUM);
                        output.accept(ModBlocks.CERIUM_BLOCK);
                        output.accept(ModBlocks.CERIUM_ORE);
                        output.accept(ModItems.PRASEODYMIUM);
                        output.accept(ModBlocks.PRASEODYMIUM_BLOCK);
                        output.accept(ModBlocks.PRASEODYMIUM_ORE);
                        output.accept(ModItems.NEODYMIUM);
                        output.accept(ModBlocks.NEODYMIUM_BLOCK);
                        output.accept(ModBlocks.NEODYMIUM_ORE);
                        output.accept(ModItems.PROMETHIUM);
                        output.accept(ModBlocks.PROMETHIUM_BLOCK);
                        output.accept(ModBlocks.PROMETHIUM_ORE);
                        output.accept(ModItems.SAMARIUM);
                        output.accept(ModBlocks.SAMARIUM_BLOCK);
                        output.accept(ModBlocks.SAMARIUM_ORE);
                        output.accept(ModItems.EUROPIUM);
                        output.accept(ModBlocks.EUROPIUM_BLOCK);
                        output.accept(ModBlocks.EUROPIUM_ORE);
                        output.accept(ModItems.GADOLINIUM);
                        output.accept(ModBlocks.GADOLINIUM_BLOCK);
                        output.accept(ModBlocks.GADOLINIUM_ORE);
                        output.accept(ModItems.TERBIUM);
                        output.accept(ModBlocks.TERBIUM_BLOCK);
                        output.accept(ModBlocks.TERBIUM_ORE);
                        output.accept(ModItems.DYSPROSIUM);
                        output.accept(ModBlocks.DYSPROSIUM_BLOCK);
                        output.accept(ModBlocks.DYSPROSIUM_ORE);
                        output.accept(ModItems.HOLMIUM);
                        output.accept(ModBlocks.HOLMIUM_BLOCK);
                        output.accept(ModBlocks.HOLMIUM_ORE);
                        output.accept(ModItems.ERBIUM);
                        output.accept(ModBlocks.ERBIUM_BLOCK);
                        output.accept(ModBlocks.ERBIUM_ORE);
                        output.accept(ModItems.THULIUM);
                        output.accept(ModBlocks.THULIUM_ORE);
                        output.accept(ModBlocks.THULIUM_BLOCK);
                        output.accept(ModItems.YTTERBIUM);
                        output.accept(ModBlocks.YTTERBIUM_BLOCK);
                        output.accept(ModBlocks.YTTERBIUM_ORE);
                        output.accept(ModItems.LUTETIUM);
                        output.accept(ModBlocks.LUTETIUM_BLOCK);
                        output.accept(ModBlocks.LUTETIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> ACTINIDES = CREATIVE_MODE_TAB.register("actinides",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.ACTINIUM.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "lanthanoids"))
                    .title(Component.translatable("creativetab.jsmenu.actinides"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.ACTINIUM);
                        output.accept(ModBlocks.ACTINIUM_BLOCK);
                        output.accept(ModBlocks.ACTINIUM_ORE);
                        output.accept(ModItems.THORIUM);
                        output.accept(ModBlocks.THORIUM_BLOCK);
                        output.accept(ModBlocks.THORIUM_ORE);
                        output.accept(ModItems.PROTACTINIUM);
                        output.accept(ModBlocks.PROTACTINIUM_BLOCK);
                        output.accept(ModBlocks.PROTACTINIUM_ORE);
                        output.accept(ModItems.URANIUM);
                        output.accept(ModBlocks.URANIUM_BLOCK);
                        output.accept(ModBlocks.URANIUM_ORE);
                        output.accept(ModItems.NEPTUNIUM);
                        output.accept(ModBlocks.NEPTUNIUM_BLOCK);
                        output.accept(ModBlocks.NEPTUNIUM_ORE);
                        output.accept(ModItems.PLUTONIUM);
                        output.accept(ModBlocks.PLUTONIUM_BLOCK);
                        output.accept(ModBlocks.PLUTONIUM_ORE);
                        output.accept(ModItems.AMERICIUM);
                        output.accept(ModBlocks.AMERICIUM_BLOCK);
                        output.accept(ModBlocks.AMERICIUM_ORE);
                        output.accept(ModItems.CURIUM);
                        output.accept(ModBlocks.CURIUM_BLOCK);
                        output.accept(ModBlocks.CURIUM_ORE);
                        output.accept(ModItems.BERKELIUM);
                        output.accept(ModBlocks.BERKELIUM_BLOCK);
                        output.accept(ModBlocks.BERKELIUM_ORE);
                        output.accept(ModItems.CALIFORNIUM);
                        output.accept(ModBlocks.CALIFORNIUM_BLOCK);
                        output.accept(ModBlocks.CALIFORNIUM_ORE);
                        output.accept(ModItems.EINSTEINIUM);
                        output.accept(ModBlocks.EINSTEINIUM_BLOCK);
                        output.accept(ModBlocks.EINSTEINIUM_ORE);
                        output.accept(ModItems.FERMIUM);
                        output.accept(ModBlocks.FERMIUM_BLOCK);
                        output.accept(ModBlocks.FERMIUM_ORE);
                        output.accept(ModItems.MENDELEVIUM);
                        output.accept(ModBlocks.MENDELEVIUM_ORE);
                        output.accept(ModBlocks.MENDELEVIUM_BLOCK);
                        output.accept(ModItems.NOBELIUM);
                        output.accept(ModBlocks.NOBELIUM_BLOCK);
                        output.accept(ModBlocks.NOBELIUM_ORE);
                        output.accept(ModItems.LAWRENCIUM);
                        output.accept(ModBlocks.LAWRENCIUM_BLOCK);
                        output.accept(ModBlocks.LAWRENCIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> POST_TRANSITION_METALS = CREATIVE_MODE_TAB.register("post_transition_metals",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.ALUMINUM.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "actinides"))
                    .title(Component.translatable("creativetab.jsmenu.post_transition_metals"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.ALUMINUM);
                        output.accept(ModBlocks.ALUMINUM_BLOCK);
                        output.accept(ModBlocks.ALUMINUM_ORE);
                        output.accept(ModItems.GALLIUM);
                        output.accept(ModBlocks.GALLIUM_BLOCK);
                        output.accept(ModBlocks.GALLIUM_ORE);
                        output.accept(ModItems.INDIUM);
                        output.accept(ModBlocks.INDIUM_BLOCK);
                        output.accept(ModBlocks.INDIUM_ORE);
                        output.accept(ModItems.TIN);
                        output.accept(ModBlocks.TIN_BLOCK);
                        output.accept(ModBlocks.TIN_ORE);
                        output.accept(ModItems.THALLIUM);
                        output.accept(ModBlocks.THALLIUM_BLOCK);
                        output.accept(ModBlocks.THALLIUM_ORE);
                        output.accept(ModItems.LEAD);
                        output.accept(ModBlocks.LEAD_BLOCK);
                        output.accept(ModBlocks.LEAD_ORE);
                        output.accept(ModItems.BISMUTH);
                        output.accept(ModBlocks.BISMUTH_BLOCK);
                        output.accept(ModBlocks.BISMUTH_ORE);
                        output.accept(ModItems.NIHONIUM);
                        output.accept(ModBlocks.NIHONIUM_BLOCK);
                        output.accept(ModBlocks.NIHONIUM_ORE);
                        output.accept(ModItems.FLEROVIUM);
                        output.accept(ModBlocks.FLEROVIUM_BLOCK);
                        output.accept(ModBlocks.FLEROVIUM_ORE);
                        output.accept(ModItems.MOSCOVIUM);
                        output.accept(ModBlocks.MOSCOVIUM_BLOCK);
                        output.accept(ModBlocks.MOSCOVIUM_ORE);
                        output.accept(ModItems.LIVERMORIUM);
                        output.accept(ModBlocks.LIVERMORIUM_BLOCK);
                        output.accept(ModBlocks.LIVERMORIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> METALLOIDS = CREATIVE_MODE_TAB.register("metalloids",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.BORON.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "post_transition_metals"))
                    .title(Component.translatable("creativetab.jsmenu.metalloids"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.BORON);
                        output.accept(ModBlocks.BORON_BLOCK);
                        output.accept(ModBlocks.BORON_ORE);
                        output.accept(ModItems.SILICON);
                        output.accept(ModBlocks.SILICON_BLOCK);
                        output.accept(ModBlocks.SILICON_ORE);
                        output.accept(ModItems.GERMANIUM);
                        output.accept(ModBlocks.GERMANIUM_BLOCK);
                        output.accept(ModBlocks.GERMANIUM_ORE);
                        output.accept(ModItems.ARSENIC);
                        output.accept(ModBlocks.ARSENIC_BLOCK);
                        output.accept(ModBlocks.ARSENIC_ORE);
                        output.accept(ModItems.ANTIMONY);
                        output.accept(ModBlocks.ANTIMONY_BLOCK);
                        output.accept(ModBlocks.ANTIMONY_ORE);
                        output.accept(ModItems.TELLURIUM);
                        output.accept(ModBlocks.TELLURIUM_BLOCK);
                        output.accept(ModBlocks.TELLURIUM_ORE);
                        output.accept(ModItems.POLONIUM);
                        output.accept(ModBlocks.POLONIUM_BLOCK);
                        output.accept(ModBlocks.POLONIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> OTHER_NON_METALS = CREATIVE_MODE_TAB.register("other_non_metals",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.HYDROGEN.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "metalloids"))
                    .title(Component.translatable("creativetab.jsmenu.other_non_metals"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.HYDROGEN);
                        output.accept(ModBlocks.HYDROGEN_BLOCK);
                        output.accept(ModBlocks.HYDROGEN_ORE);
                        output.accept(ModItems.CARBON);
                        output.accept(ModBlocks.CARBON_BLOCK);
                        output.accept(ModBlocks.CARBON_ORE);
                        output.accept(ModItems.NITROGEN);
                        output.accept(ModBlocks.NITROGEN_BLOCK);
                        output.accept(ModBlocks.NITROGEN_ORE);
                        output.accept(ModItems.OXYGEN);
                        output.accept(ModBlocks.OXYGEN_BLOCK);
                        output.accept(ModBlocks.OXYGEN_ORE);
                        output.accept(ModItems.PHOSPHORUS);
                        output.accept(ModBlocks.PHOSPHORUS_BLOCK);
                        output.accept(ModBlocks.PHOSPHORUS_ORE);
                        output.accept(ModItems.SULFUR);
                        output.accept(ModBlocks.SULFUR_BLOCK);
                        output.accept(ModBlocks.SULFUR_ORE);
                        output.accept(ModItems.SELENIUM);
                        output.accept(ModBlocks.SELENIUM_BLOCK);
                        output.accept(ModBlocks.SELENIUM_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> HALOGENS = CREATIVE_MODE_TAB.register("halogens",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.FLUORINE.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "other_non_metals"))
                    .title(Component.translatable("creativetab.jsmenu.halogens"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.FLUORINE);
                        output.accept(ModBlocks.FLUORINE_BLOCK);
                        output.accept(ModBlocks.FLUORINE_ORE);
                        output.accept(ModItems.CHLORINE);
                        output.accept(ModBlocks.CHLORINE_BLOCK);
                        output.accept(ModBlocks.CHLORINE_ORE);
                        output.accept(ModItems.IODINE);
                        output.accept(ModBlocks.IODINE_BLOCK);
                        output.accept(ModBlocks.IODINE_ORE);
                        output.accept(ModItems.ASTATINE);
                        output.accept(ModBlocks.ASTATINE_BLOCK);
                        output.accept(ModBlocks.ASTATINE_ORE);
                        output.accept(ModItems.TENNESSINE);
                        output.accept(ModBlocks.TENNESSINE_BLOCK);
                        output.accept(ModBlocks.TENNESSINE_ORE);
                    }).build());

    public static final Supplier<CreativeModeTab> NOBLE_GASSES = CREATIVE_MODE_TAB.register("noble_gasses",
            () -> CreativeModeTab.builder().icon(() -> new ItemStack(ModItems.HELIUM.get()))
                    .withTabsBefore(ResourceLocation.fromNamespaceAndPath(JSMenu.MOD_ID, "halogens"))
                    .title(Component.translatable("creativetab.jsmenu.noble_gasses"))
                    .displayItems((itemDisplayParameters, output) -> {
                        output.accept(ModItems.HELIUM);
                        output.accept(ModBlocks.HELIUM_BLOCK);
                        output.accept(ModItems.NEON);
                        output.accept(ModBlocks.NEON_BLOCK);
                        output.accept(ModBlocks.NEON_ORE);
                        output.accept(ModItems.ARGON);
                        output.accept(ModBlocks.ARGON_BLOCK);
                        output.accept(ModBlocks.ARGON_ORE);
                        output.accept(ModItems.KRYPTON);
                        output.accept(ModBlocks.KRYPTON_BLOCK);
                        output.accept(ModBlocks.KRYPTON_ORE);
                        output.accept(ModItems.XENON);
                        output.accept(ModBlocks.XENON_BLOCK);
                        output.accept(ModBlocks.XENON_ORE);
                        output.accept(ModItems.RADON);
                        output.accept(ModBlocks.RADON_BLOCK);
                        output.accept(ModBlocks.RADON_ORE);
                        output.accept(ModItems.OGANESSON);
                        output.accept(ModBlocks.OGANESSON_BLOCK);
                        output.accept(ModBlocks.OGANESSON_ORE);
                    }).build());




    public static void register(IEventBus eventBus) {
        CREATIVE_MODE_TAB.register(eventBus);
    }
}
